{"version":3,"sources":["components/UserManual/UserManual.module.css","components/ControlPanel/BacklitScreen/BacklitScreen.module.css","components/ControlPanel/NumberKeypad/KeypadButton/KeypadButton.module.css","components/ControlPanel/ControlPanel.module.css","components/ControlPanel/NumberKeypad/NumberKeypad.module.css","components/ControlPanel/BacklitScreen/BacklitScreen.js","components/ControlPanel/NumberKeypad/KeypadButton/KeypadButton.js","components/ControlPanel/NumberKeypad/NumberKeypad.js","store/actions.js","components/ControlPanel/ControlPanel.js","components/UserManual/UserManual.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","BacklitScreen","state","show","this","props","statusMessage","enteringPasscode","passcode","className","screenIsOff","classes","backlitScreen","backlitScreenOff","join","backlitScreen__LockStatus","lockStatus","backlitScreen__StatusMessage","Component","connect","KeypadButton","keypadButton","onClick","clicked","children","keypadButton__Symbol","String","fromCharCode","symbol","NumberKeypad","keyboardKeys","keypadButtons","button","unlockedValidation","boxPasscode","onSetBoxPasscode","onLocking","onReady","onChangeLockStatus","onError","isValid","length","digits","slice","isNaN","setTimeout","lockedValidation","onUnlocking","onService","serviceValidation","onValidating","serialNumber","onReset","fetch","then","response","json","responseData","sn","catch","error","console","validate","Error","handleScreenOff","timerScreenOff","onClearScreenOffTimer","onUpdateScreen","onEnableButtons","clearInterval","handleCheckPasscode","timerCheckPasscode","onClearCheckPasscodeTimer","onDisableButtons","onEnteringPasscode","handleKeypadButtonClicked","event","preventDefault","disableButtons","onSetScreenOffTimer","onSetCheckPasscodeTimer","onUpdatePasscode","includes","key","updatedSymbol","document","addEventListener","handleKeyboardEvent","bind","removeEventListener","buttons","map","btn","numberKeypad","dispatch","type","value","callbackFunc","ControlPanel","controlPanel","controlPanel__Serial","UserManual","userManual","userManual__Container","userManual__Paragraph","userManual__List","App","Boolean","window","location","hostname","match","initialState","beforeError","reducer","action","setInterval","updatedStatus","persistedState","serializedState","sessionStorage","getItem","JSON","parse","err","log","loadFromSessionStorage","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveToSessionStorage","getState","app","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6b2526c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userManual\":\"UserManual_userManual__10TaD\",\"userManual__Container\":\"UserManual_userManual__Container__2YCbL\",\"userManual__List\":\"UserManual_userManual__List__2buBF\",\"userManual__Paragraph\":\"UserManual_userManual__Paragraph__2P3P9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backlitScreen\":\"BacklitScreen_backlitScreen__2Vw2e\",\"backlitScreenOff\":\"BacklitScreen_backlitScreenOff__2sdI2\",\"backlitScreen__LockStatus\":\"BacklitScreen_backlitScreen__LockStatus__1SwVn\",\"backlitScreen__StatusMessage\":\"BacklitScreen_backlitScreen__StatusMessage__2L8OR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keypadButton\":\"KeypadButton_keypadButton__TOC4H\",\"keypadButton__Symbol\":\"KeypadButton_keypadButton__Symbol__2VaQb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlPanel\":\"ControlPanel_controlPanel__1xKdK\",\"controlPanel__Serial\":\"ControlPanel_controlPanel__Serial__1rK-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numberKeypad\":\"NumberKeypad_numberKeypad__KHwRv\"};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport classes from \"./BacklitScreen.module.css\";\r\n\r\nclass BacklitScreen extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    let show = this.props.statusMessage;\r\n    if (this.props.enteringPasscode) show = this.props.passcode;\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.screenIsOff\r\n            ? classes.backlitScreen\r\n            : [classes.backlitScreen, classes.backlitScreenOff].join(\" \")\r\n        }\r\n      >\r\n        <div className={classes.backlitScreen__LockStatus}>\r\n          {this.props.lockStatus}\r\n        </div>\r\n        <div className={classes.backlitScreen__StatusMessage}>{show}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    lockStatus: state.lockStatus,\r\n    statusMessage: state.statusMessage,\r\n    screenIsOff: state.screenIsOff,\r\n    passcode: state.passcode,\r\n    enteringPasscode: state.enteringPasscode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BacklitScreen);\r\n","import React from \"react\";\r\n\r\nimport classes from \"./KeypadButton.module.css\";\r\n\r\nconst KeypadButton = (props) => {\r\n  return (\r\n    <div className={classes.keypadButton} onClick={props.clicked}>\r\n      {props.children}\r\n      <div className={classes.keypadButton__Symbol}>\r\n        {String.fromCharCode(+props.symbol)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KeypadButton;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport KeypadButton from \"./KeypadButton/KeypadButton\";\r\nimport * as actionTypes from \"../../../store/actions\";\r\n\r\nimport classes from \"./NumberKeypad.module.css\";\r\n\r\nclass NumberKeypad extends Component {\r\n  keyboardKeys = [\r\n    \"0\",\r\n    \"1\",\r\n    \"2\",\r\n    \"3\",\r\n    \"4\",\r\n    \"5\",\r\n    \"6\",\r\n    \"7\",\r\n    \"8\",\r\n    \"9\",\r\n    \"L\",\r\n    \"l\",\r\n    \"*\",\r\n    \"A\",\r\n    \"a\",\r\n    \"B\",\r\n    \"b\",\r\n    \"ArrowUp\",\r\n    \"ArrowDown\",\r\n    \"ArrowLeft\",\r\n    \"ArrowRight\",\r\n  ];\r\n\r\n  keypadButtons = [\r\n    { button: \"7\", symbol: null },\r\n    { button: \"8\", symbol: \"8593\" },\r\n    { button: \"9\", symbol: null },\r\n    { button: \"4\", symbol: \"8592\" },\r\n    { button: \"5\", symbol: null },\r\n    { button: \"6\", symbol: \"8594\" },\r\n    { button: \"1\", symbol: null },\r\n    { button: \"2\", symbol: \"8595\" },\r\n    { button: \"3\", symbol: null },\r\n    { button: \"*\", symbol: \"66\" },\r\n    { button: \"0\", symbol: null },\r\n    { button: \"L\", symbol: \"65\" },\r\n  ];\r\n\r\n  unlockedValidation = (passcode) => {\r\n    const {\r\n      boxPasscode,\r\n      onSetBoxPasscode,\r\n      onLocking,\r\n      onReady,\r\n      onChangeLockStatus,\r\n      onError,\r\n    } = this.props;\r\n\r\n    let isValid = false;\r\n    const length = passcode.length;\r\n    if (\r\n      length === 7 &&\r\n      (passcode[length - 1] === \"L\" || passcode[length - 1] === \"l\")\r\n    ) {\r\n      const digits = passcode.slice(0, length - 1);\r\n      if (!isNaN(digits)) {\r\n        isValid = true;\r\n      }\r\n    }\r\n    if (\r\n      isValid &&\r\n      (boxPasscode === \"\" || boxPasscode === passcode.slice(0, 6))\r\n    ) {\r\n      onSetBoxPasscode();\r\n\r\n      onLocking();\r\n      setTimeout(() => {\r\n        onReady();\r\n        onChangeLockStatus();\r\n      }, 3000);\r\n    } else {\r\n      onError();\r\n    }\r\n  };\r\n\r\n  lockedValidation = (passcode) => {\r\n    const {\r\n      boxPasscode,\r\n      onUnlocking,\r\n      onReady,\r\n      onChangeLockStatus,\r\n      onService,\r\n      onError,\r\n    } = this.props;\r\n\r\n    if (passcode === boxPasscode) {\r\n      onUnlocking();\r\n      setTimeout(() => {\r\n        onReady();\r\n        onChangeLockStatus();\r\n      }, 3000);\r\n    } else if (passcode === \"000000\") {\r\n      onService();\r\n    } else {\r\n      onError();\r\n    }\r\n  };\r\n\r\n  serviceValidation = (passcode) => {\r\n    const {\r\n      onValidating,\r\n      serialNumber,\r\n      onUnlocking,\r\n      onReset,\r\n      onError,\r\n    } = this.props;\r\n\r\n    onValidating();\r\n\r\n    fetch(\r\n      \"https://9w4qucosgf.execute-api.eu-central-1.amazonaws.com/default/CR-JS_team_M02a?code=\" +\r\n        passcode\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((responseData) => {\r\n        if (responseData.sn === serialNumber) {\r\n          onUnlocking();\r\n          setTimeout(() => {\r\n            onReset();\r\n          }, 3000);\r\n        } else {\r\n          onError();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Something went wrong with fetch operation:\", error);\r\n      });\r\n  };\r\n\r\n  validate = () => {\r\n    const { passcode, lockStatus, statusMessage } = this.props;\r\n    switch (lockStatus) {\r\n      case \"Unlocked\":\r\n        this.unlockedValidation(passcode);\r\n        break;\r\n      case \"Locked\":\r\n        if (statusMessage === \"Service\") this.serviceValidation(passcode);\r\n        else this.lockedValidation(passcode);\r\n        break;\r\n      default:\r\n        throw new Error(\"Something went wrong! Check lockStatus value...\");\r\n    }\r\n  };\r\n\r\n  handleScreenOff = () => {\r\n    const {\r\n      timerScreenOff,\r\n      onClearScreenOffTimer,\r\n      onUpdateScreen,\r\n      onEnableButtons,\r\n    } = this.props;\r\n\r\n    clearInterval(timerScreenOff);\r\n    onClearScreenOffTimer();\r\n\r\n    onUpdateScreen();\r\n\r\n    onEnableButtons();\r\n  };\r\n\r\n  handleCheckPasscode = () => {\r\n    const {\r\n      timerCheckPasscode,\r\n      onClearCheckPasscodeTimer,\r\n      onDisableButtons,\r\n      enteringPasscode,\r\n      onEnteringPasscode,\r\n    } = this.props;\r\n\r\n    clearInterval(timerCheckPasscode);\r\n    onClearCheckPasscodeTimer();\r\n\r\n    onDisableButtons();\r\n\r\n    if (enteringPasscode) onEnteringPasscode();\r\n\r\n    this.validate();\r\n  };\r\n\r\n  handleKeypadButtonClicked = (event, symbol) => {\r\n    event.preventDefault();\r\n\r\n    const {\r\n      statusMessage,\r\n      onEnableButtons,\r\n      disableButtons,\r\n      screenIsOff,\r\n      onUpdateScreen,\r\n      onEnteringPasscode,\r\n      enteringPasscode,\r\n      timerScreenOff,\r\n      timerCheckPasscode,\r\n      onSetScreenOffTimer,\r\n      onSetCheckPasscodeTimer,\r\n      passcode,\r\n      onUpdatePasscode,\r\n    } = this.props;\r\n\r\n    if (statusMessage === \"Service\") onEnableButtons();\r\n\r\n    if (disableButtons) return;\r\n\r\n    if (screenIsOff) {\r\n      onUpdateScreen();\r\n      onEnteringPasscode();\r\n    }\r\n\r\n    if (statusMessage === \"Service\" && !enteringPasscode) onEnteringPasscode();\r\n\r\n    clearInterval(timerScreenOff);\r\n    clearInterval(timerCheckPasscode);\r\n    onSetScreenOffTimer(this.handleScreenOff);\r\n    onSetCheckPasscodeTimer(this.handleCheckPasscode);\r\n\r\n    let updatedPasscode = passcode + symbol;\r\n    onUpdatePasscode(updatedPasscode);\r\n  };\r\n\r\n  handleKeyboardEvent(event) {\r\n    if (this.keyboardKeys.includes(event.key)) {\r\n      let symbol = event.key;\r\n\r\n      let updatedSymbol = null;\r\n      switch (symbol) {\r\n        case \"l\":\r\n          updatedSymbol = \"L\";\r\n          break;\r\n        case \"a\":\r\n        case \"A\":\r\n          updatedSymbol = \"L\";\r\n          break;\r\n        case \"b\":\r\n        case \"B\":\r\n          updatedSymbol = \"*\";\r\n          break;\r\n        case \"ArrowUp\":\r\n          updatedSymbol = \"8\";\r\n          break;\r\n        case \"ArrowDown\":\r\n          updatedSymbol = \"2\";\r\n          break;\r\n        case \"ArrowLeft\":\r\n          updatedSymbol = \"4\";\r\n          break;\r\n        case \"ArrowRight\":\r\n          updatedSymbol = \"6\";\r\n          break;\r\n        default:\r\n          updatedSymbol = symbol;\r\n      }\r\n      this.handleKeypadButtonClicked(event, updatedSymbol);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\r\n      \"keyup\",\r\n      this.handleKeyboardEvent.bind(this),\r\n      false\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\r\n      \"keyup\",\r\n      this.handleKeyboardEvent.bind(this),\r\n      false\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let buttons = this.keypadButtons.map((btn) => {\r\n      return (\r\n        <KeypadButton\r\n          key={btn.button}\r\n          symbol={btn.symbol}\r\n          clicked={(event) => this.handleKeypadButtonClicked(event, btn.button)}\r\n        >\r\n          {btn.button}\r\n        </KeypadButton>\r\n      );\r\n    });\r\n    return <div className={classes.numberKeypad}>{buttons}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    timerScreenOff: state.timerScreenOff,\r\n    timerCheckPasscode: state.timerCheckPasscode,\r\n    passcode: state.passcode,\r\n    screenIsOff: state.screenIsOff,\r\n    statusMessage: state.statusMessage,\r\n    lockStatus: state.lockStatus,\r\n    boxPasscode: state.boxPasscode,\r\n    enteringPasscode: state.enteringPasscode,\r\n    serialNumber: state.serialNumber,\r\n    disableButtons: state.disableButtons,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDisableButtons: () => dispatch({ type: actionTypes.DISABLE_BUTTONS }),\r\n    onEnableButtons: () => dispatch({ type: actionTypes.ENABLE_BUTTONS }),\r\n    onReset: () => dispatch({ type: actionTypes.RESET }),\r\n    onValidating: () => dispatch({ type: actionTypes.VALIDATING }),\r\n    onService: () => dispatch({ type: actionTypes.SERVICE }),\r\n    onChangeLockStatus: () =>\r\n      dispatch({ type: actionTypes.CHANGE_LOCK_STATUS }),\r\n    onReady: () => dispatch({ type: actionTypes.READY }),\r\n    onLocking: () => dispatch({ type: actionTypes.SET_LOCKING }),\r\n    onUnlocking: () => dispatch({ type: actionTypes.SET_UNLOCKING }),\r\n    onError: () => dispatch({ type: actionTypes.ERROR }),\r\n    onSetBoxPasscode: () => dispatch({ type: actionTypes.SET_BOX_PASSCODE }),\r\n    onUpdateScreen: () => dispatch({ type: actionTypes.UPDATE_SCREEN }),\r\n    onUpdatePasscode: (value) =>\r\n      dispatch({ type: actionTypes.UPDATE_PASSCODE, value: value }),\r\n    onSetScreenOffTimer: (callbackFunc) =>\r\n      dispatch({\r\n        type: actionTypes.SET_SCREEN_OFF_TIMER,\r\n        callbackFunc: callbackFunc,\r\n      }),\r\n    onSetCheckPasscodeTimer: (callbackFunc) =>\r\n      dispatch({\r\n        type: actionTypes.SET_CHECK_PASSCODE_TIMER,\r\n        callbackFunc: callbackFunc,\r\n      }),\r\n    onClearScreenOffTimer: () =>\r\n      dispatch({ type: actionTypes.CLEAR_SCREEN_OFF_TIMER }),\r\n    onClearCheckPasscodeTimer: () =>\r\n      dispatch({ type: actionTypes.CLEAR_CHECK_PASSCODE_TIMER }),\r\n    onEnteringPasscode: () => dispatch({ type: actionTypes.ENTERING_PASSCODE }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NumberKeypad);\r\n","export const CHANGE_LOCK_STATUS = \"CHANGE_LOCK_STATUS\";\r\n\r\nexport const READY = \"READY\";\r\n\r\nexport const SET_LOCKING = \"SET_LOCKING\";\r\nexport const SET_UNLOCKING = \"SET_UNLOCKING\";\r\n\r\nexport const ERROR = \"ERROR\";\r\n\r\nexport const SET_BOX_PASSCODE = \"SET_BOX_PASSCODE\";\r\n\r\nexport const UPDATE_PASSCODE = \"UPDATE_PASSCODE\";\r\n\r\nexport const UPDATE_SCREEN = \"UPDATE_SCREEN\";\r\n\r\nexport const SET_SCREEN_OFF_TIMER = \"SET_SCREEN_OFF_TIMER\";\r\nexport const SET_CHECK_PASSCODE_TIMER = \"SET_CHECK_PASSCODE_TIMER\";\r\n\r\nexport const CLEAR_SCREEN_OFF_TIMER = \"CLEAR_SCREEN_OFF_TIMER\";\r\nexport const CLEAR_CHECK_PASSCODE_TIMER = \"CLEAR_CHECK_PASSCODE_TIMER\";\r\n\r\nexport const ENTERING_PASSCODE = \"ENTERING_PASSCODE\";\r\n\r\nexport const SERVICE = \"SERVICE\";\r\n\r\nexport const VALIDATING = \"VALIDATING\";\r\n\r\nexport const RESET = \"RESET\";\r\n\r\nexport const DISABLE_BUTTONS = \"DISABLE_BUTTONS\";\r\nexport const ENABLE_BUTTONS = \"ENABLE_BUTTONS\";\r\n","import React from \"react\";\r\n\r\nimport BacklitScreen from \"./BacklitScreen/BacklitScreen\";\r\nimport NumberKeypad from \"./NumberKeypad/NumberKeypad\";\r\n\r\nimport classes from \"./ControlPanel.module.css\";\r\n\r\nconst ControlPanel = () => {\r\n  return (\r\n    <div className={classes.controlPanel}>\r\n      <BacklitScreen />\r\n      <NumberKeypad />\r\n      <div className={classes.controlPanel__Serial}>S/N: 4815162342</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlPanel;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./UserManual.module.css\";\r\n\r\nconst UserManual = () => {\r\n  return (\r\n    <div className={classes.userManual}>\r\n      <div className={classes.userManual__Container}>\r\n        <p className={classes.userManual__Paragraph}>Locking:</p>\r\n        <ul className={classes.userManual__List}>\r\n          <li>\r\n            Before closing doors enter any 6 digit passcode. Remember the\r\n            passcode!\r\n          </li>\r\n          <li>Close the door and press lock button [L] to lock the safe.</li>\r\n        </ul>\r\n        <p className={classes.userManual__Paragraph}>Unlocking:</p>\r\n        <ul className={classes.userManual__List}>\r\n          <li>\r\n            Enter your 6 digit passcode. If you can’t remember passcode, please\r\n            call reception to help you for a small fee of 5€.\r\n          </li>\r\n          <li>Please leave the door open before checking out from hotel.</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManual;\r\n","import React from \"react\";\n\nimport ControlPanel from \"./components/ControlPanel/ControlPanel\";\nimport UserManual from \"./components/UserManual/UserManual\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <ControlPanel />\n      <UserManual />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"./actions\";\r\n\r\nconst initialState = {\r\n  boxPasscode: \"\",\r\n  passcode: \"\",\r\n  lockStatus: \"Unlocked\",\r\n  statusMessage: \"\",\r\n  screenIsOff: true,\r\n  serialNumber: \"4815162342\",\r\n  timerScreenOff: null,\r\n  timerCheckPasscode: null,\r\n  enteringPasscode: false,\r\n  beforeError: \"\",\r\n  disableButtons: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CHANGE_LOCK_STATUS:\r\n      return {\r\n        ...state,\r\n        lockStatus: state.lockStatus === \"Unlocked\" ? \"Locked\" : \"Unlocked\",\r\n      };\r\n    case actionTypes.READY:\r\n      return {\r\n        ...state,\r\n        statusMessage: \"Ready\",\r\n      };\r\n    case actionTypes.SET_LOCKING:\r\n      return {\r\n        ...state,\r\n        statusMessage: \"Locking...\",\r\n      };\r\n    case actionTypes.SET_UNLOCKING:\r\n      return {\r\n        ...state,\r\n        statusMessage: \"Unlocking...\",\r\n      };\r\n    case actionTypes.ERROR:\r\n      return {\r\n        ...state,\r\n        beforeError:\r\n          state.statusMessage === \"Error\"\r\n            ? state.beforeError\r\n            : state.statusMessage,\r\n        statusMessage: \"Error\",\r\n        passcode: \"\",\r\n      };\r\n    case actionTypes.SET_BOX_PASSCODE:\r\n      return {\r\n        ...state,\r\n        boxPasscode: state.passcode.slice(0, 6),\r\n        passcode: \"\",\r\n      };\r\n    case actionTypes.UPDATE_SCREEN:\r\n      return {\r\n        ...state,\r\n        screenIsOff: !state.screenIsOff,\r\n      };\r\n    case actionTypes.UPDATE_PASSCODE:\r\n      return {\r\n        ...state,\r\n        passcode: action.value,\r\n      };\r\n    case actionTypes.SET_CHECK_PASSCODE_TIMER:\r\n      return {\r\n        ...state,\r\n        timerCheckPasscode: setInterval(action.callbackFunc, 1200),\r\n      };\r\n    case actionTypes.SET_SCREEN_OFF_TIMER:\r\n      return {\r\n        ...state,\r\n        timerScreenOff: setInterval(action.callbackFunc, 5000),\r\n      };\r\n    case actionTypes.CLEAR_CHECK_PASSCODE_TIMER:\r\n      return {\r\n        ...state,\r\n        timerCheckPasscode: null,\r\n      };\r\n    case actionTypes.CLEAR_SCREEN_OFF_TIMER:\r\n      let updatedStatus = null;\r\n      if (\r\n        state.beforeError === \"Ready\" ||\r\n        state.beforeError === \"Validating...\"\r\n      )\r\n        updatedStatus = \"Ready\";\r\n      else updatedStatus = \"\";\r\n      return {\r\n        ...state,\r\n        timerScreenOff: null,\r\n        statusMessage:\r\n          state.statusMessage !== \"Ready\" ? updatedStatus : state.statusMessage,\r\n        passcode: \"\",\r\n      };\r\n    case actionTypes.ENTERING_PASSCODE:\r\n      return {\r\n        ...state,\r\n        enteringPasscode: !state.enteringPasscode,\r\n      };\r\n    case actionTypes.SERVICE:\r\n      return {\r\n        ...state,\r\n        statusMessage: \"Service\",\r\n        passcode: \"\",\r\n      };\r\n    case actionTypes.VALIDATING:\r\n      return {\r\n        ...state,\r\n        statusMessage: \"Validating...\",\r\n      };\r\n    case actionTypes.RESET:\r\n      return {\r\n        ...state,\r\n        boxPasscode: \"\",\r\n        passcode: \"\",\r\n        lockStatus: \"Unlocked\",\r\n        statusMessage: \"\",\r\n        enteringPasscode: false,\r\n        beforeError: \"\",\r\n      };\r\n    case actionTypes.DISABLE_BUTTONS:\r\n      return {\r\n        ...state,\r\n        disableButtons: true,\r\n      };\r\n    case actionTypes.ENABLE_BUTTONS:\r\n      return {\r\n        ...state,\r\n        disableButtons: false,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./store/reducer\";\n\nconst saveToSessionStorage = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    sessionStorage.setItem(\"state\", serializedState);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst loadFromSessionStorage = () => {\n  try {\n    const serializedState = sessionStorage.getItem(\"state\");\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.log(err);\n    return undefined;\n  }\n};\n\nconst persistedState = loadFromSessionStorage();\nconst store = createStore(\n  reducer,\n  persistedState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe(() => saveToSessionStorage(store.getState()));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}